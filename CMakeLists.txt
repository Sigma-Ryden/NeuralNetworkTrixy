cmake_minimum_required(VERSION 3.5)

project(TrixyNet LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

include_directories(include)

set(TESTING
    src/simple_test.cpp
    src/mnist_test.cpp
    src/speed_test.cpp
    src/regression_test.cpp
)
set(TRIXY_COLLECTION
    include/Trixy/Container/Container.hpp
    include/Trixy/Container/IContainer.hpp
)
set(TRIXY_LIQUE
    include/Trixy/Lique/LiqueLinear.hpp
    include/Trixy/Lique/LiqueMatrix.hpp
    include/Trixy/Lique/LiqueVector.hpp
    include/Trixy/Lique/LiqueBaseTensor.hpp
    include/Trixy/Lique/LiqueTool.hpp
    include/Trixy/Lique/Detail/MacroScope.hpp
    include/Trixy/Lique/Detail/MacroUnscope.hpp
    include/Trixy/Lique/Detail/FunctionDetail.hpp
    include/Trixy/Lique/Detail/LiqueMeta.hpp
    include/Trixy/Lique/LiqueCore.hpp
)
set(TRIXY_ILIQUE
    include/Trixy/ILique/ILiqueBase.hpp
    include/Trixy/ILique/ILiqueLinear.hpp
    include/Trixy/ILique/ILiqueMatrix.hpp
    include/Trixy/ILique/ILiqueVector.hpp
    include/Trixy/ILique/Detail/MacroScope.hpp
    include/Trixy/ILique/Detail/MacroUnscope.hpp
    include/Trixy/ILique/ILiqueCore.hpp
)
set(TRIXY_NEURO
    include/Trixy/Detail/TrixyMeta.hpp
    include/Trixy/Neuro/Detail/TrixyNetMeta.hpp
    include/Trixy/Neuro/Detail/MacroScope.hpp
    include/Trixy/Neuro/Detail/MacroUnscope.hpp
    include/Trixy/Neuro/Detail/FunctionDetail.hpp
    include/Trixy/Neuro/Network/FeedForwardNet.hpp
    include/Trixy/Neuro/Network/BaseTrixyNet.hpp
    include/Trixy/Neuro/Network/TrixyNetCore.hpp
    include/Trixy/Locker/BaseLocker.hpp
    include/Trixy/Locker/ContainerLocker.hpp
    include/Trixy/Locker/VectorLocker.hpp
    include/Trixy/Locker/MatrixLocker.hpp
    include/Trixy/Locker/LockerCore.hpp
    include/Trixy/Locker/Detail/LockerMeta.hpp
    include/Trixy/Locker/Detail/MacroScope.hpp
    include/Trixy/Locker/Detail/MacroUnscope.hpp
    include/Trixy/Neuro/Functional/Function/ActivationFunction.hpp
    include/Trixy/Neuro/Functional/Function/ActivationFunctionLess.hpp
    include/Trixy/Neuro/Functional/Function/LossFunction.hpp
    include/Trixy/Neuro/Functional/Function/FunctionCore.hpp
    include/Trixy/Neuro/Functional/Optimizer/GradientDescentOptimizer.hpp
    include/Trixy/Neuro/Functional/Optimizer/MomentumOptimizer.hpp
    include/Trixy/Neuro/Functional/Optimizer/NestorovOptimizer.hpp
    include/Trixy/Neuro/Functional/Optimizer/AdaGradOptimizer.hpp
    include/Trixy/Neuro/Functional/Optimizer/RMSPropOptimizer.hpp
    include/Trixy/Neuro/Functional/Optimizer/AdamOptimizer.hpp
    include/Trixy/Neuro/Functional/Optimizer/BaseOptimizer.hpp
    include/Trixy/Neuro/Functional/Optimizer/OptimizerCore.hpp
    include/Trixy/Neuro/Functional/BaseFunctional.hpp
    include/Trixy/Neuro/Functional/IdFunctional.hpp
    include/Trixy/Neuro/Functional/FeedForwardNetFunctional.hpp
    include/Trixy/Neuro/Functional/FunctionalCore.hpp
    include/Trixy/Neuro/Serialization/BaseSerializer.hpp
    include/Trixy/Neuro/Serialization/FeedForwardNetSerializer.hpp
    include/Trixy/Neuro/Serialization/PolynomialRegressionSerializer.hpp
    include/Trixy/Neuro/Serialization/LinearRegressionSerializer.hpp
    include/Trixy/Neuro/Serialization/SerializerCore.hpp
    include/Trixy/Neuro/Regression/BaseRegression.hpp
    include/Trixy/Neuro/Regression/LinearRegression.hpp
    include/Trixy/Neuro/Regression/PolynomialRegression.hpp
    include/Trixy/Neuro/Regression/RegressionCore.hpp
    include/Trixy/Neuro/Training/BaseTraining.hpp
    include/Trixy/Neuro/Training/FeedForwardNetTraining.hpp
    include/Trixy/Neuro/Training/LinearRegressionTraining.hpp
    include/Trixy/Neuro/Training/PolynomialRegressionTraining.hpp
    include/Trixy/Neuro/Training/TrainingCore.hpp
    include/Trixy/Neuro/NeuroCore.hpp
)
set(UTILS
    include/Utility/util.hpp
    include/Utility/mnist_reader.hpp
    include/Utility/mnist_reader_common.hpp
)

add_executable(${PROJECT_NAME}
    ${TRIXY_COLLECTION}
    ${TRIXY_LIQUE}
    ${TRIXY_ILIQUE}
    ${TRIXY_NEURO}
    ${TIMER}
    ${UTILS}
    ${TESTING}
)
